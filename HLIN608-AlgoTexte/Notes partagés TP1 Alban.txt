Sommes:
    
    
1)

/*
 * Tps : O(n)
 * Esp : O(n)
 */
unsigned int SommeEntierConsecutifs(unsigned int n){
    return n==0? 0 ; n + SommeEntierConsecutifs(n-1);
    }
    
/*
 * Tps : O(1)
 * Esp : O(1)
 */
unsigned int SommeEntierConsecutifs(unsigned int n){
    return n*(n+1)/2;
}
    

/*
 * Tps : O(n)
 * Esp : O(1)
 */
unsigned int SommeEntiersConsecutifs(unsigned int n){
    unsigned int i,resultat = 0;
    for(i=1; i<= n; i++){
        resultat+=i;
    }
    return resultat;
}

  
/*
 * Tps : O(1)
 * Esp : O(1)
 */
unsigned int SommeEntierConsecutifs(unsigned int n){
    unsigned int resultat = n;
    if (n % 2) {/* n est impair */
      resultat += 1; /* resultat = n+1 */
      resultat /= 2; /* resultat = (n+1)/2 */
      resultat *= n; /* resultat = (n+1)/2*n */
	} else {/* n est pair */
	  resultat /= 2; /* resultat = n / 2 */
	  resultat *= (n+1); /* resultat = n / 2 * (n + 1) */
	}
	return resultat;
}

/*
 *     b3 b2 b1 b0
 *   &  0  0   0  1
 *   --------------
 *       0  0   0  b0
 *
 *     b3 b2 b1 b0 / 2 = 0 b3 b2 b1 
 *     b3 b2 b1 b0 * 2 = b2 b1 b0 0
 */

/*
 * Tps : O(1)
 * Esp : O(1)
 */
unsigned int SommeEntierConsecutifs(unsigned int n){
    unsigned int resultat = n;
    if (n & 1) {/* n est impair */
      resultat += 1; /* resultat = n+1 */
      resultat >>= 1; /* resultat = (n+1)/2 */
      resultat *= n; /* resultat = (n+1)/2*n */
	} else {/* n est pair */
	  resultat >>= 1; /* resultat = n / 2 */
	  resultat *= (n+1); /* resultat = n / 2 * (n + 1) */
	}
	return resultat;
}

=======================
2)

unsigned int SommeEntierConsecutifs(unsigned int n){
    return SommeEntierConsecutifsGeneral(0, n);
}


/*
 * Tps : O(1)
 * Esp : O(1)
 */
unsigned int SommeEntierConsecutifsGeneral(unsigned int a, unsigned int b){
    unsigned int resultat = a + b;
    if (resultat & 1) {/* b-a+1 est pair */
      resultat = b - a + 1; /* resultat = b - a+1 */
      resultat >>= 1; /* resultat = (b-a+1)/2 */
      resultat *= (a+b); /* resultat = (b-a+1)/2*(a+b) */
	} else {/* a + b est pair */
	  resultat >>= 1; /* resultat = (a + b) / 2 */
	  resultat *= (b - a+1); /* resultat = (a + b) / 2 * (b - a + 1) */
	}
	return resultat;
}







